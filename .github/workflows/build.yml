name: build curl for android ios

on: 
  workflow_dispatch:
    inputs:
      tag_date:
        description: 'tag date'     
        required: true

env:
  CURL_VERSION: 7.68.0
  SSL_VERSION: 1.1.1q

jobs:
  build_android:
    strategy:
      matrix:
        target: [arm-linux-androideabi,aarch64-linux-android]
    name: Android
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Run build script
      run: |
        cd $GITHUB_WORKSPACE
        sh ./tools/build-android-openssl.sh ${{env.SSL_VERSION}} ${{ matrix.target }}
        sh ./tools/build-android-curl.sh ${{env.CURL_VERSION}} ${{ matrix.target }}
    - uses: actions/upload-artifact@v2
      with:
        name: curl
        path: ~/curl/**/*

 
  publish:
    runs-on: ubuntu-latest
    needs: [build_android]
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: curl
          path: curl/
          
      - name: Create Release Asset
        run: |
          tar cvfz curl_${{env.CURL_VERSION}}.tgz curl
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: CURL_${{env.CURL_VERSION}}_${{ github.event.inputs.tag_date }}
          release_name: CURL_${{env.CURL_VERSION}}_${{ github.event.inputs.tag_date }}
          draft: false
          prerelease: false
          
      - name: Upload CURL
        #id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./curl_${{env.CURL_VERSION}}.tgz
          asset_name: curl_${{env.CURL_VERSION}}.tgz
          asset_content_type: application/tgz
          

